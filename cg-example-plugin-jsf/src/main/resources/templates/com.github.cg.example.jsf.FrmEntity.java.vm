package ${app.pkgs.controller}.frm;

#if( $entity.getAttributesManyToOne().size() > 0 )
import java.util.List;
import javax.ejb.EJB;
#end

#if( $entity.getAttributesOneToMany().size() > 0 )
import javax.inject.Inject;
#end

import javax.inject.Named;

import com.github.cg.example.jsf.annotations.HandlesError;
import ${app.pkgs.model}.${entity.name};
import ${app.pkgs.manager}.${entity.name}Manager;

#foreach( $attr in $entity.getAttributesManyToOne() )
import ${app.pkgs.model}.${attr.typeName};
import ${app.pkgs.manager}.${attr.typeName}Manager;
#end

#foreach( $attr in $entity.getAttributesOneToMany() )
import ${app.pkgs.model}.${attr.associationClassSimpleName};
import ${app.pkgs.controller}.frm.Frm${attr.associationClassSimpleName};
#end

@Named
@HandlesError
public class Frm${entity.name} extends Frm<${entity.name}Manager,${entity.name},${entity.attributeIdClass}> {

	private static final long serialVersionUID = 1L;
#foreach( $attr in $entity.getAttributesManyToOne() )

	@EJB
	private ${attr.typeName}Manager ${attr.typeNameFlc}Manager;
#end
#foreach( $attr in $entity.getAttributesOneToMany() )
	private FrmAssociationOneToMany<Frm${entity.name},${entity.name},Frm${attr.associationClassSimpleName},${attr.associationClassSimpleName}> association${attr.nameFuc};
#end	
#foreach( $attr in $entity.getAttributesManyToOne() )

	public List<${attr.typeName}> onComplete${attr.typeName}(String suggest) {
		return this.${attr.typeNameFlc}Manager.retrieveBySuggestOrderByDescription(suggest);
	}
#end
#if( $entity.getAttributesOneToMany().size() > 0 )

	@Inject
	public void initAssociations(#foreach( $attr in $entity.getAttributesOneToMany() )Frm${attr.associationClassSimpleName} frm${attr.associationClassSimpleName}#if( $foreach.hasNext ), #end#end) throws Exception {
#foreach( $attr in $entity.getAttributesOneToMany() )
		
		this.association${attr.nameFuc} = new FrmAssociationOneToMany<Frm${entity.name},${entity.name},Frm${attr.associationClassSimpleName},${attr.associationClassSimpleName}>(this, frm${attr.associationClassSimpleName}, "tbView:dt${attr.nameFuc}") {

			@Override
			public void connect(${attr.associationClassSimpleName} association, ${entity.name} entity) {
				association.set${attr.associationMappedByFuc}(entity);
			}

			@Override
			public List<${attr.associationClassSimpleName}> getAssociations(${entity.name} entity) {
				return entity.get${attr.nameFuc}();
			}
		};
#end
	}
#end
#foreach( $attr in $entity.getAttributesOneToMany() )
	
	public FrmAssociationOneToMany<Frm${entity.name},${entity.name},Frm${attr.associationClassSimpleName},${attr.associationClassSimpleName}> getAssociation${attr.nameFuc}() {
		return association${attr.nameFuc};
	}
#end
}