package ${app.pkgs.controller};

import java.io.Serializable;
import java.util.List;

import javax.enterprise.context.ConversationScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ComponentSystemEvent;
import javax.inject.Inject;
import javax.inject.Named;

import com.github.cg.example.jsf.annotations.HandlesError;
import ${app.pkgs.model}.${entity.name};
import ${app.pkgs.dao}.${entity.name}DAO;
import ${app.pkgs.manager}.${entity.name}Manager;
import com.github.cg.example.jsf.util.FacesMessageUtils;

#foreach( $attributeManyToOne in $entity.getAttributesManyToOne() )
import ${app.pkgs.model}.${attributeManyToOne.typeName};
import ${app.pkgs.dao}.${attributeManyToOne.typeName}DAO;
#end

@Named
@ConversationScoped
@HandlesError
public class ${entity.name}EditCtrl extends AppConversationCtrl implements Serializable {

	private static final long serialVersionUID = 1L;

	private ${entity.attributeIdClass} id;
	
	private ${entity.name} entity;
	
	@Inject
	private ${entity.name}Manager ${entity.nameFlc}Manager;
	
	@Inject
	private ${entity.name}DAO ${entity.nameFlc}DAO;
#foreach( $attributeManyToOne in $entity.getAttributesManyToOne() )

	@Inject
	private ${attributeManyToOne.typeName}DAO ${attributeManyToOne.typeNameFlc}DAO;
#end
	
	public void start(ComponentSystemEvent evt) {
		if (!FacesContext.getCurrentInstance().isPostback() && !FacesContext.getCurrentInstance().isValidationFailed()) {
			reset();			
		}
	}

	public void save() throws Exception {
		
		this.entity = this.${entity.nameFlc}Manager.save(getEntity());
		this.id = getEntity().getId();
		
		FacesMessageUtils.addInfo("The ${entity.label} was save successfully!");
	}
	
	public void reset() {		
		if (getId() != null) { 
			entity = this.${entity.nameFlc}DAO.retrieveById(getId());			
		}
		else {
			entity = new ${entity.name}();
		}
	}
	
	public ${entity.attributeIdClass} getId() {
		return id;
	}

	public void setId(${entity.attributeIdClass} id) {
		this.id = id;
	}

	public ${entity.name} getEntity() {
		return entity;
	}
#foreach( $attributeManyToOne in $entity.getAttributesManyToOne() )

	public List<${attributeManyToOne.typeName}> onCompleteModel(String suggest) {
		return this.${attributeManyToOne.typeNameFlc}DAO.retrieveBySuggestOrderByDescription(suggest);
	}
#end
}